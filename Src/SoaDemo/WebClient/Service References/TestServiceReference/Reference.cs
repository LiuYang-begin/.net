//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebClient.TestServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TestServiceReference.TestWebServiceSoap")]
    public interface TestWebServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HelloWorld", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string HelloWorld();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HelloWorld", ReplyAction="*")]
        System.Threading.Tasks.Task<string> HelloWorldAsync();
        
        // CODEGEN: 消息 PostDataRequest 以后生成的消息协定具有标头
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PostData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        WebClient.TestServiceReference.PostDataResponse PostData(WebClient.TestServiceReference.PostDataRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PostData", ReplyAction="*")]
        System.Threading.Tasks.Task<WebClient.TestServiceReference.PostDataResponse> PostDataAsync(WebClient.TestServiceReference.PostDataRequest request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class SoapHeaderHelper : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string userIDField;
        
        private string userPwdField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
                this.RaisePropertyChanged("UserID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string UserPwd {
            get {
                return this.userPwdField;
            }
            set {
                this.userPwdField = value;
                this.RaisePropertyChanged("UserPwd");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Student : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string nameField;
        
        private string pwdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Pwd {
            get {
                return this.pwdField;
            }
            set {
                this.pwdField = value;
                this.RaisePropertyChanged("Pwd");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PostData", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class PostDataRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public WebClient.TestServiceReference.SoapHeaderHelper SoapHeaderHelper;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string pwd;
        
        public PostDataRequest() {
        }
        
        public PostDataRequest(WebClient.TestServiceReference.SoapHeaderHelper SoapHeaderHelper, string name, string pwd) {
            this.SoapHeaderHelper = SoapHeaderHelper;
            this.name = name;
            this.pwd = pwd;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PostDataResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class PostDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public WebClient.TestServiceReference.Student PostDataResult;
        
        public PostDataResponse() {
        }
        
        public PostDataResponse(WebClient.TestServiceReference.Student PostDataResult) {
            this.PostDataResult = PostDataResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface TestWebServiceSoapChannel : WebClient.TestServiceReference.TestWebServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TestWebServiceSoapClient : System.ServiceModel.ClientBase<WebClient.TestServiceReference.TestWebServiceSoap>, WebClient.TestServiceReference.TestWebServiceSoap {
        
        public TestWebServiceSoapClient() {
        }
        
        public TestWebServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TestWebServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TestWebServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TestWebServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string HelloWorld() {
            return base.Channel.HelloWorld();
        }
        
        public System.Threading.Tasks.Task<string> HelloWorldAsync() {
            return base.Channel.HelloWorldAsync();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WebClient.TestServiceReference.PostDataResponse WebClient.TestServiceReference.TestWebServiceSoap.PostData(WebClient.TestServiceReference.PostDataRequest request) {
            return base.Channel.PostData(request);
        }
        
        public WebClient.TestServiceReference.Student PostData(WebClient.TestServiceReference.SoapHeaderHelper SoapHeaderHelper, string name, string pwd) {
            WebClient.TestServiceReference.PostDataRequest inValue = new WebClient.TestServiceReference.PostDataRequest();
            inValue.SoapHeaderHelper = SoapHeaderHelper;
            inValue.name = name;
            inValue.pwd = pwd;
            WebClient.TestServiceReference.PostDataResponse retVal = ((WebClient.TestServiceReference.TestWebServiceSoap)(this)).PostData(inValue);
            return retVal.PostDataResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WebClient.TestServiceReference.PostDataResponse> WebClient.TestServiceReference.TestWebServiceSoap.PostDataAsync(WebClient.TestServiceReference.PostDataRequest request) {
            return base.Channel.PostDataAsync(request);
        }
        
        public System.Threading.Tasks.Task<WebClient.TestServiceReference.PostDataResponse> PostDataAsync(WebClient.TestServiceReference.SoapHeaderHelper SoapHeaderHelper, string name, string pwd) {
            WebClient.TestServiceReference.PostDataRequest inValue = new WebClient.TestServiceReference.PostDataRequest();
            inValue.SoapHeaderHelper = SoapHeaderHelper;
            inValue.name = name;
            inValue.pwd = pwd;
            return ((WebClient.TestServiceReference.TestWebServiceSoap)(this)).PostDataAsync(inValue);
        }
    }
}
