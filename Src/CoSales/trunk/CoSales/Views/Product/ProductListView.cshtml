@{
    ViewBag.Title = "ProductListView";
}

<div class="layui-fluid sell-list">
    <div class="layui-row">
        <div class="layui-form">
            <div class="layui-form-item">
                <label class="layui-form-label">产品名称：</label>
                <div class="layui-input-inline">
                    <input type="text" class="layui-input" placeholder="请输入" id="ProductName">
                </div>
                <div class="layui-input-inline">
                    <button class="layui-btn" id="btnQuery">查询</button>
                </div>
            </div>
        </div>
    </div>
    <div class="layui-row">
        <table id="tt" lay-filter="listTable"></table>
    </div>
</div>

<script type="text/html" id="barDemo">
    <a class="layui-btn layui-btn-xs" lay-event="edit">编辑</a>
    <a class="layui-btn layui-btn-danger layui-btn-xs" lay-event="del">删除</a>
</script>

@section MyScript{
    <script>
        var lay = {};
        layui.use(['table'], function () {
            lay = layui;
            init();
        });

        function init() {
            var tablein = initTable();

            // 绑定行内按钮事件 tool是工具条事件名，test是table原始容器的属性 lay-filter="对应的值"
            lay.table.on('tool(listTable)', handleTableRow);

            // 查询事件，重新绑定表格数据
            $('#btnQuery').click({ 'tablein': tablein }, bindTable);
        }

        // 初始化表格
        function initTable(table) {
            return lay.table.render({
                elem: '#tt'
                , url: '/Product/GetProductInfo'
                , method: 'POST'
                , toolbar: true
                , title: '销售记录'
                //, totalRow: true//合计行
                , loading: true
                , height: 'full-80'// full-差值 高度铺满
                , cols: [[
                  { field: 'ProductName', title: '产品名称' }
                  , { field: 'Price', title: '售价' }
                  , { field: 'ProductStockNumber', title: '库存数量' }
                  , { field: 'ProductSellNumber', title: '累计销售' }
                  , { field: 'StateText', title: '状态' }
                  , { title: '操作', toolbar: '#barDemo' }
                ]]
                , page: true
                , response: {
                    statusCode: 200 //重新规定成功的状态码为 200，table 组件默认为 0
                }
                , parseData: function (res) { //将原始数据解析成 table 组件所规定的数据
                    return {
                        "code": 200, //解析接口状态
                        "msg": '', //解析提示文本
                        "count": res.Total, //解析数据长度
                        "data": res.Rows //解析数据列表
                    };
                }
            });//table render end
        }//initTable end

        // 附带查询参数请求，重新绑定数据到表格
        function bindTable(e) {
            e.data.tablein.reload({
                where: {
                    ProductName: $('#ProductName').val()
                },
                page: {
                    page: 1
                }
            });// table reload end
        }

        // 行内事件处理
        function handleTableRow(obj) {
            // 该行数据对象
            var data = obj.data;
            if (obj.event === 'del') {
                lay.layer.confirm('真的删除行么', function (index) {
                    removeProduct(obj);
                });
            } else if (obj.event === 'edit') {
                editProduct(obj);
            }
        }

        // 删除产品
        function removeProduct(row) {
            $.post('/Product/RemoveProduct', { id: row.data.ID }, function (resp) {
                var obj = getObjRes(resp);
                if (obj.Status) {
                    lay.layer.msg('已删除');
                    row.del();
                } else {
                    lay.layer.msg('无法删除');
                }
            });
        }

        // 编辑产品详情
        function editProduct(row) {
            lay.layer.open({
                type: 2//iframe层
                    , title: '产品详情'
                    , content: '/Product/EditProductView?id=' + row.data.ID
                    , shade: 0.8//遮罩
                    , area: ['90%', '90%']//宽高设置
            });
        }
    </script>
}